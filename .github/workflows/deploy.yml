name: Deploy Assignment1 DevOps

on:
  push:
    branches:
      - main
      - dev
      - prod
      - fix
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Sync config file to S3 based on branch
      run: |
        BUCKET_NAME="techeazy-devops-config"
        if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          aws s3 cp assignment1/config/dev.json s3://$BUCKET_NAME/dev.json
        elif [ "${{ github.ref }}" == "refs/heads/prod" ]; then
          aws s3 cp assignment1/config/prod.json s3://$BUCKET_NAME/prod.json
        elif [ "${{ github.ref }}" == "refs/heads/fix" ]; then
          aws s3 cp assignment1/config/fix.json s3://$BUCKET_NAME/fix.json
        else
          echo "Branch not recognized for config upload"
        fi

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e
          REPO_URL="https://github.com/${{ github.repository }}.git"
          BRANCH="${{ github.ref_name }}"
          
          if [ -d /home/ubuntu/techeazy-devops ]; then
            cd /home/ubuntu/techeazy-devops
            git remote set-url origin $REPO_URL
            git fetch origin
            git reset --hard origin/$BRANCH
          else
            git clone --branch $BRANCH $REPO_URL /home/ubuntu/techeazy-devops
            cd /home/ubuntu/techeazy-devops
          fi
          
          mvn clean package
          
          # Stop only the specific application
          APP_JAR="target/hellomvc-0.0.1-SNAPSHOT.jar"
          if pgrep -f "$APP_JAR"; then
            sudo pkill -f "$APP_JAR"
            sleep 5  # Wait for process to terminate
          fi
          
          sudo nohup java -jar $APP_JAR --server.port=80 > app.log 2>&1 &
          sleep 25  # Increased sleep time for app startup
          
          # Check the root endpoint
          if ! curl -f http://localhost:80/; then
            echo "App failed to start or is not reachable"
            sudo tail -n 100 app.log
            exit 1
          fi

    # Optional: Additional health check step if needed
    # - name: Run extended health check
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ubuntu
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     script: |
    #       curl -I http://localhost:80/health